#
# "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
# (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
# aplicativos mainframe. Registro no INPI sob o nome G3270.
#
# Copyright (C) <2008> <Banco do Brasil S.A.>
#
# Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
# os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
# Free Software Foundation.
#
# Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
# GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
# A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
# obter mais detalhes.
#
# Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
# programa;  se  não, escreva para a Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA, 02111-1307, USA
#
# Contatos:
#
# perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
# erico.mendonca@gmail.com	(Erico Mascarenhas de Mendonça)
#

MODULE_NAME=libpw3270cpp

SOURCES=session.cc exception.cc local.cc remote.cc service.cc module.cc

#---[ Configuration values ]-------------------------------------------------------------

PACKAGE_NAME=@PACKAGE_NAME@
PACKAGE_VERSION=@PACKAGE_VERSION@
PACKAGE_TARNAME=@PACKAGE_TARNAME@

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
sbindir=@sbindir@
libdir=@libdir@
includedir=@includedir@


BASEDIR=@BASEDIR@
SRCDIR=$(BASEDIR)/.src/$(PACKAGE_TARNAME)-$(PACKAGE_VERSION)/src/$(MODULE_NAME)
POTDIR=$(BASEDIR)/.pot/$(PACKAGE_TARNAME)/$(MODULE_NAME)

OBJDIR=.obj
OBJDBG=$(OBJDIR)/Debug
OBJRLS=$(OBJDIR)/Release

MKDIR=@MKDIR_P@
CC=@CXX@
LD=@CXX@
AR=@AR@
XGETTEXT=@XGETTEXT@
MSGCAT=@MSGCAT@
INSTALL=@INSTALL@
VALGRIND=@VALGRIND@
INSTALL_DATA=@INSTALL_DATA@
INSTALL_PROGRAM=@INSTALL_PROGRAM@

DATE_FMT = +%Y%m%d
ifdef SOURCE_DATE_EPOCH
    BUILD_DATE ?= $(shell date -u -d "@$(SOURCE_DATE_EPOCH)" "$(DATE_FMT)" 2>/dev/null || date -u -r "$(SOURCE_DATE_EPOCH)" "$(DATE_FMT)" 2>/dev/null || date -u "$(DATE_FMT)")
else
    BUILD_DATE ?= $(shell date "$(DATE_FMT)")
endif

CFLAGS= \
	@CFLAGS@ \
	-Wno-deprecated-declarations \
	-I$(BASEDIR)/src/include \
	@LIB3270_CFLAGS@ \
	@DBUS_CFLAGS@ \
	@GTK_CFLAGS@

LIBS= \
	@LIBS@ \
	@DBUS_LIBS@ \
	@LIBICONV@

#---[ Rules ]----------------------------------------------------------------------------

DEPENDS=\
	$(BASEDIR)/src/include/*.h \
	$(BASEDIR)/src/include/pw3270/*.h \
	*.h \
	Makefile

$(OBJDBG)/%.o: \
	%.cc \
	$(DEPENDS)

	@echo $< ...
	@$(MKDIR) `dirname $@`
	@$(CC) \
		$(CFLAGS) \
		@DBG_CFLAGS@ \
		-DBUILD_DATE=`date +"%Y%m%d"`\
		-o $@ -c $<

$(OBJRLS)/%.o: \
	%.cc \
	$(DEPENDS)

	@echo $< ...
	@$(MKDIR) `dirname $@`
	@$(CC) $(CFLAGS) \
		@RLS_CFLAGS@ \
		-DBUILD_DATE=$(BUILD_DATE) \
		-o $@ -c $<

$(POTDIR)/%.pot: %.c

	@echo $(notdir $@) ...
	@$(MKDIR) `dirname $@`
	@$(XGETTEXT) \
		--default-domain=$(PACKAGE) \
		--language=C \
		--keyword=_ \
		--keyword=N_ \
		--keyword=MSG_:2 \
		--output=$@ \
		$<

	@touch $@

#---[ Release Targets ]------------------------------------------------------------------

all: \
	$(BASEDIR)/.bin/Release/$(MODULE_NAME).a

Release: \
	$(BASEDIR)/.bin/Release/$(MODULE_NAME).a

install: \
	$(DESTDIR)$(libdir)/$(MODULE_NAME).a

	@$(MKDIR) $(DESTDIR)/$(includedir)/pw3270
	@$(INSTALL_DATA) ../include/pw3270cpp.h $(DESTDIR)/$(includedir)/pw3270

$(DESTDIR)$(libdir)/$(MODULE_NAME).a: \
	$(BASEDIR)/.bin/Release/$(MODULE_NAME).a

	@echo $@ ...
	@$(MKDIR) `dirname $@`
	@$(INSTALL_DATA) $^ $@

$(BASEDIR)/.bin/Release/$(MODULE_NAME).a: \
	$(foreach SRC, $(basename $(SOURCES)), $(OBJRLS)/$(SRC).o)

	@echo $@ ...
	@$(MKDIR) `dirname $@`
	@$(AR) rcs $@ $^

pot: \
	$(BASEDIR)/.pot/$(PACKAGE_TARNAME)/$(MODULE_NAME).pot

$(BASEDIR)/.pot/$(PACKAGE_TARNAME)/$(MODULE_NAME).pot: \
	$(foreach SRC, $(basename $(SOURCES)), $(POTDIR)/$(SRC).pot)

	@rm -f $@
	@mkdir -p `dirname $@`
	@$(MSGCAT) --sort-output $^ > $@

$(SRCDIR): \
	clean

	@$(MKDIR) $@
	@$(INSTALL_DATA) *.cc *.h *.in *.cbp $@


#---[ Debug Targets ]--------------------------------------------------------------------

Debug: \
	$(BASEDIR)/.bin/Debug/$(MODULE_NAME).a

$(BASEDIR)/.bin/Debug/$(MODULE_NAME).a: \
	$(foreach SRC, $(basename $(SOURCES)), $(OBJDBG)/$(SRC).o)

	@echo $@ ...
	@$(MKDIR) `dirname $@`
	@$(AR) rcs $@ $^

.bin/Debug/$(MODULE_NAME)@EXEEXT@: \
	$(OBJDBG)/testprogram.o \
	$(BASEDIR)/.bin/Debug/$(MODULE_NAME).a

	@$(MKDIR) `dirname $@`
	@$(LD) $(APP_LDFLAGS) -o $@ $^ $(LIBS)

run: \
	.bin/Debug/$(MODULE_NAME)@EXEEXT@

ifeq ($(VALGRIND),no)
	.bin/Debug/$(MODULE_NAME)@EXEEXT@
else
	@touch valgrind.suppression
	@$(VALGRIND) \
		--leak-check=full \
		--track-origins=yes \
		--gen-suppressions=all \
		--suppressions=valgrind.suppression \
		.bin/Debug/$(MODULE_NAME)@EXEEXT@
endif


#---[ Clean Targets]---------------------------------------------------------------------

cleanDebug:

	@rm -fr	$(BASEDIR)/.obj/Debug/$(MODULE_NAME).a \
			$(OBJDBG)
	@rm -fr .bin

cleanRelease:

	@rm -fr	$(BASEDIR)/.obj/Release/$(MODULE_NAME).a \
			$(OBJRLS)

	@rm -fr $(POTDIR)

clean: \
	cleanDebug \
	cleanRelease

	
